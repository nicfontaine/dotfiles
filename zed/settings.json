// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "ui_font_size": 16,
  "buffer_font_size": 15,
  // "buffer_line_height": "comfortable",
  "buffer_line_height": {
    "custom": 1.8
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true,
    "source.fixAll.prettier": true,
    "source.removeUnusedImports": true
  },
  "soft_wrap": "editor_width",
  "format_on_save": "on",
  "formatter": "language_server",
  "tab_size": 2,
  "auto_update": true,
  "git_status": true,
  "show_whitespaces": "selection",
  "copilot": {
    "disabled_globs": [
      ".env"
    ]
  },
  "ui_font_family": "Cascadia Code",
  "buffer_font_family": "Cascadia Code",
  "cursor_blink": true,
  "eslint": {
    "enabled": true,
    "autoFixOnSave": true,
    "autoFixOnFormat": true,
    "autoFixOnFormatDelay": 1500,
    "lintOnChange": true,
    "lintOnSave": true,
    "lintOnType": true,
    "lintOnFocus": true,
    "ignorePath": ".eslintignore",
    "configFile": ".eslintrc.js",
    "extensions": [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
      ".vue"
    ]
  },
  "languages": {
    "TypeScript": {
      "formatter": "prettier",
      "code_actions_on_format": {
        "source.fixAll.eslint": true,
        "source.removeUnusedImports": true,
        "source.organizeImports": true,
        "source.sortImports": true
      },
      "format_on_save": {
        "external": {
          "command": "prettier",
          "arguments": [
            "--stdin-filepath",
            "{buffer_path}"
          ]
        }
      }
    },
    "TSX": {
      "formatter": "prettier",
      "code_actions_on_format": {
        "source.fixAll.eslint": true,
        "source.removeUnusedImports": true,
        "source.organizeImports": true,
        "source.sortImports": true
      },
      "format_on_save": "on"
    },
    "JavaScript": {
      "formatter": "prettier",
      "code_actions_on_format": {
        "source.fixAll.eslint": true,
        "source.removeUnusedImports": true,
        "source.organizeImports": true,
        "source.sortImports": true
      },
      "format_on_save": "on"
    }
  },
  "git": {
    "enabled": true,
    "autoFetch": true,
    "autoFetchInterval": 300,
    "autoFetchOnFocus": true,
    "autoFetchOnWindowChange": true,
    "autoFetchOnBuild": true,
    "git_status": true,
    "autoFetchOnBuildEvents": [
      "build",
      "run",
      "debug"
    ],
    "autoFetchOnBuildEventsDelay": 1500,
    "autoFetchOnBuildDelay": 1500,
    "git_gutter": "tracked_files"
  },
  "lsp": {
    "typescript-language-server": {
      "initialization_options": {
        "checkOnSave": {
          "command": "eslint_d",
          "arguments": [
            "--stdin",
            "--stdin-filename",
            "{buffer_path}",
            "--fix-to-stdout"
          ]
        },
        "preferences": {
          "includeInlayParameterNameHints": "all",
          "includeInlayParameterNameHintsWhenArgumentMatchesName": true,
          "includeInlayFunctionParameterTypeHints": true,
          "includeInlayVariableTypeHints": true,
          "includeInlayVariableTypeHintsWhenTypeMatchesName": false,
          "includeInlayPropertyDeclarationTypeHints": true,
          "includeInlayFunctionLikeReturnTypeHints": true,
          "includeInlayEnumMemberValueHints": true
        }
      }
    }
  }
}
